plugins {
    id 'ru.vyarus.animalsniffer' version '1.2.0'
    id 'net.saliman.cobertura' version '2.3.2'
}

defaultTasks 'clean'

apply from: '../utils.gradle'
import org.apache.tools.ant.filters.*

apply plugin: 'java'
apply plugin: 'ru.vyarus.animalsniffer'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'maven'
apply plugin: 'checkstyle'

version = '3.5.2-SNAPSHOT'
group = 'com.ibm.watson.developercloud'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

repositories {
    mavenCentral()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

checkstyle {
    configFile = rootProject.file('checkstyle.xml')
}

task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}

configurations {
    tests
}

artifacts {
    tests testJar
}

dependencies {
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.3.1'
    compile group: 'com.squareup.okhttp3', name: 'okhttp-ws', version: '3.3.1'
    compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.3.1'
    compile group: 'com.squareup.okhttp3', name: 'okhttp-urlconnection', version: '3.3.1'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.glassfish.jersey.bundles.repackaged', name: 'jersey-jsr166e', version: '2.22.2'

    testCompile project(':core')
    testCompile group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '3.3.1'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    testCompile group: 'com.google.guava', name: 'guava', version: '19.0'
    testCompile group: 'junit', name: 'junit-dep', version: '4.11'
    signature 'org.codehaus.mojo.signature:java17:1.0@signature'
}

processResources {
    filter ReplaceTokens, tokens: [
            "pom.version": project.version,
            "build.date" : getDate()
    ]
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "http://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: System.env.CI_DEPLOY_USERNAME, password: System.env.CI_DEPLOY_PASSWORD)
        }
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/"){
            authentication(userName: System.env.CI_DEPLOY_USERNAME, password: System.env.CI_DEPLOY_PASSWORD)
        }
    }
}

cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*']
    coverageReportDir = new File("$buildDir/reports/cobertura")
}