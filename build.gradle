apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.7
targetCompatibility = 1.7
group = 'com.ibm.watson.developercloud'
archivesBaseName = 'watson-developer-cloud'
version = '3.5.1'

description = 'Client library to use the IBM Watson and Alchemy Services'

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    group = 'com.ibm.watson.developercloud'
    version = '3.5.1'

    repositories {
        mavenCentral()
    }

    dependencies {

        testCompile group: 'com.squareup.okhttp3', name: 'mockwebserver', version:'3.3.1'
        testCompile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.7'
        testCompile group: 'com.google.guava', name: 'guava', version:'19.0'
        testCompile group: 'junit', name: 'junit-dep', version:'4.11'
    }

    checkstyle {
        configFile = rootProject.file('checkstyle.xml')
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }


}

configure(subprojects - project(':core')) {
    dependencies {
        compile project(':core')
        testCompile project(path: ':core', configuration: 'tests')
    }
}

project(':core') {

    task testJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output
    }

    configurations {
        tests
    }

    artifacts {
        tests testJar
    }

    dependencies {
        compile group: 'com.squareup.okhttp3', name: 'okhttp', version:'3.3.1'
        compile group: 'com.squareup.okhttp3', name: 'okhttp-ws', version:'3.3.1'
        compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version:'3.3.1'
        compile group: 'com.squareup.okhttp3', name: 'okhttp-urlconnection', version:'3.3.1'
        compile group: 'com.google.code.gson', name: 'gson', version:'2.6.2'
        compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.4'
        compile group: 'org.glassfish.jersey.bundles.repackaged', name: 'jersey-jsr166e', version:'2.22.2'
    }
}

project(':dialog') {
    dependencies {
        compile project(':core')
        compile project(':conversation')
    }
}

project(':tests') {
    dependencies {
        testCompile project(':core')
        testCompile project(':natural-language-classifier')
        testCompile project(':alchemy')
        testCompile project(':conversation')
        testCompile project(':dialog')
        testCompile project(':document-conversion')
        testCompile project(':language-translation')
        testCompile project(':language-translator')
        testCompile project(':personality-insights')
        testCompile project(':retrieve-and-rank')
        testCompile project(':speech-to-text')
        testCompile project(':text-to-speech')
        testCompile project(':tone-analyzer')
        testCompile project(':tradeoff-analytics')
        testCompile project(':visual-recognition')
    }
}

//task explodedDist(type: Copy) {
//    into "$buildDir/libs"
//    subprojects {
//        from tasks.withType(Jar)
//    }
//}
//task allJar(type: Jar) {
//    destinationDir = file("$buildDir/libs")
//    def sourceProjects = subprojects.findAll { it.plugins.hasPlugin('java')}
//    from sourceProjects.collect { it.sourceSets.main.output }
//}
//
//artifacts {
//    archives allJar
//}
